"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _helperPluginUtils() {
  const data = require("@babel/helper-plugin-utils");

  _helperPluginUtils = function () {
    return data;
  };

  return data;
}

function _presetStage() {
  const data = _interopRequireDefault(require("@babel/preset-stage-2"));

  _presetStage = function () {
    return data;
  };

  return data;
}

function _pluginProposalExportDefaultFrom() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-export-default-from"));

  _pluginProposalExportDefaultFrom = function () {
    return data;
  };

  return data;
}

function _pluginProposalLogicalAssignmentOperators() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-logical-assignment-operators"));

  _pluginProposalLogicalAssignmentOperators = function () {
    return data;
  };

  return data;
}

function _pluginProposalOptionalChaining() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-optional-chaining"));

  _pluginProposalOptionalChaining = function () {
    return data;
  };

  return data;
}

function _pluginProposalPipelineOperator() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-pipeline-operator"));

  _pluginProposalPipelineOperator = function () {
    return data;
  };

  return data;
}

function _pluginProposalNullishCoalescingOperator() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-nullish-coalescing-operator"));

  _pluginProposalNullishCoalescingOperator = function () {
    return data;
  };

  return data;
}

function _pluginProposalDoExpressions() {
  const data = _interopRequireDefault(require("@babel/plugin-proposal-do-expressions"));

  _pluginProposalDoExpressions = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _helperPluginUtils().declare)((api, opts = {}) => {
  api.assertVersion(7);
  const {
    loose = false,
    useBuiltIns = false,
    decoratorsLegacy = false
  } = opts;

  if (typeof loose !== "boolean") {
    throw new Error("@babel/preset-stage-1 'loose' option must be a boolean.");
  }

  if (typeof useBuiltIns !== "boolean") {
    throw new Error("@babel/preset-stage-1 'useBuiltIns' option must be a boolean.");
  }

  if (typeof decoratorsLegacy !== "boolean") {
    throw new Error("@babel/preset-stage-1 'decoratorsLegacy' option must be a boolean.");
  }

  if (decoratorsLegacy !== true) {
    throw new Error("The new decorators proposal is not supported yet." + ' You must pass the `"decoratorsLegacy": true` option to' + " @babel/preset-stage-1");
  }

  return {
    presets: [[_presetStage().default, {
      loose,
      useBuiltIns,
      decoratorsLegacy
    }]],
    plugins: [_pluginProposalExportDefaultFrom().default, _pluginProposalLogicalAssignmentOperators().default, [_pluginProposalOptionalChaining().default, {
      loose
    }], _pluginProposalPipelineOperator().default, [_pluginProposalNullishCoalescingOperator().default, {
      loose
    }], _pluginProposalDoExpressions().default]
  };
});

exports.default = _default;